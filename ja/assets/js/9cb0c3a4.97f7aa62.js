(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[990],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return d},kt:function(){return p}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},d=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),f=s(r),p=i,m=f["".concat(l,".").concat(p)]||f[p]||u[p]||o;return r?n.createElement(m,a(a({ref:t},d),{},{components:r})):n.createElement(m,a({ref:t},d))}));function p(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=f;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var s=2;s<o;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},3878:function(e,t,r){"use strict";r.d(t,{r:function(){return a}});var n=r(7294),i="icon_1PGw",o=r(9205),a=function(e){return n.createElement("div",{className:"alert alert--primary",role:"alert",style:{margin:"2rem"}},n.createElement("div",{className:i},n.createElement(o.A,{icon:"\ud83d\udca1",active:"true"})),e.children)}},983:function(e,t,r){"use strict";r.d(t,{M:function(){return c}});var n=r(7294),i=r(9205),o="titleOffset_2I3u",a="iconContainer_1xRA",c=function(e){var t=e.title?n.createElement("div",{className:"card__header"},n.createElement("span",{className:a},e.icon&&n.createElement(i.A,{icon:e.icon,link:e.link,active:"true"})),n.createElement("h3",{className:e.icon&&o},e.title)):"";return n.createElement("div",{className:"card-demo",style:{margin:"2rem"}},n.createElement("div",{className:"card"},t,n.createElement("div",{className:"card__body"},n.createElement("p",null," ",e.children," "))))}},9205:function(e,t,r){"use strict";r.d(t,{A:function(){return s}});var n=r(7294),i="hidden_2JtY",o="iconContainer_2Rnc",a="visible_2147",c="link_Lh4h",l="clickable_3vcc",s=function(e){var t=" "+(e.active?a:i),r=c+" "+(e.link&&l);return n.createElement("div",{className:o+t},n.createElement("a",{href:e.link,className:r},e.icon||"\ud83d\ude80"))}},8941:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return s},metadata:function(){return d},toc:function(){return u},default:function(){return p}});var n=r(2122),i=r(9756),o=(r(7294),r(3905)),a=r(983),c=r(3878),l=["components"],s={title:"Introduction",sidebar_position:1},d={unversionedId:"Guide/web-ifc-three/Introduction",id:"Guide/web-ifc-three/Introduction",isDocsHomePage:!1,title:"Introduction",description:"BIM is not only geometry...",source:"@site/docs/Guide/web-ifc-three/Introduction.mdx",sourceDirName:"Guide/web-ifc-three",slug:"/Guide/web-ifc-three/Introduction",permalink:"/info/ja/docs/Guide/web-ifc-three/Introduction",version:"current",sidebarPosition:1,frontMatter:{title:"Introduction",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/info/ja/docs/Guide/web-ifc/Introduction"},next:{title:"Setup",permalink:"/info/ja/docs/Guide/web-ifc-three/Setup"}},u=[{value:"BIM is not only geometry...",id:"bim-is-not-only-geometry",children:[{value:"Can I use <code>web-ifc</code> directly?",id:"can-i-use-web-ifc-directly",children:[]},{value:"Can I use the <code>THREE.IFCLoader</code> directly?",id:"can-i-use-the-threeifcloader-directly",children:[]}]}],f={toc:u};function p(e){var t=e.components,r=(0,i.Z)(e,l);return(0,o.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"bim-is-not-only-geometry"},"BIM is not only geometry..."),(0,o.kt)("p",null,"...but it has geometry."),(0,o.kt)("p",null,"  \ud83d\udcaa\n",(0,o.kt)("a",{parentName:"p",href:"%22https://ifcjs.github.io/info/docs/Guide/web-ifc/Introduction%22"},"Web-ifc")," is a very powerful tool capable of reading and writing IFCs with near-native speed. However, almost all BIM applications show the user a 3D view of the models they are working with. You could use ",(0,o.kt)("inlineCode",{parentName:"p"},"web-ifc")," in any graphics engine, but we have already done that for you in ",(0,o.kt)("strong",{parentName:"p"},"web-ifc-three"),"."),(0,o.kt)("p",null,"  \ud83e\uddf6\n",(0,o.kt)("inlineCode",{parentName:"p"},"web-ifc-three")," is a wrapper around ",(0,o.kt)("inlineCode",{parentName:"p"},"web-ifc")," that reads all data from IFC files and transforms it into geometry that can be displayed and edited in any browser. You can install it with ",(0,o.kt)("inlineCode",{parentName:"p"},"npm i web-ifc-three")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"yarn add web-ifc-three"),". Some cool facts about this module:"),(0,o.kt)(a.M,{mdxType:"IfcCard"},"\ud83d\udc23 It's super easy to use."),(0,o.kt)(a.M,{mdxType:"IfcCard"},"\ud83c\udfa9 It's the ",(0,o.kt)("a",{href:"https://threejs.org/examples/webgl_loader_ifc.html"},"official IFCLoader of Three.js"),"."),(0,o.kt)(a.M,{mdxType:"IfcCard"},"\ud83d\ude80 It's very efficient, being able to display thousands of objects at 60 fps in a browser. It can display multiple models, change materials and filter items."),(0,o.kt)(a.M,{mdxType:"IfcCard"},"\ud83e\udde0 It can get and traverse the spatial structure tree of multiple files. Also, it can access the properties of all the items, both clicking on them in the 3d view and with smart filters."),(0,o.kt)("p",null,"  \ud83c\udf93\nIn the following points, the API and its functionalities will be shown step by step. However, there are a couple of issues that are important to be clear about before using web-ifc-three."),(0,o.kt)("h3",{id:"can-i-use-web-ifc-directly"},"Can I use ",(0,o.kt)("inlineCode",{parentName:"h3"},"web-ifc")," directly?"),(0,o.kt)("p",null,"With web-ifc you could build almost any BIM tool capable of reading and writing IFC. So why create a layer on top of it?"),(0,o.kt)("p",null,"  \ud83e\udd37\u200d\u2640\ufe0f\nBecause almost all BIM tools are 3D, and we think it would not make sense for all developers to implement a viewer from scratch. If you are only interested in the data, you may be better off using web-ifc directly."),(0,o.kt)("p",null,"In addition, web-ifc-three makes working with IFCs much easier and safer even for the developer who has no previous experience with the format."),(0,o.kt)(c.r,{mdxType:"IfcAlert"},"Web-ifc is way more flexible but requires more knowledge of the IFC schema and a greater implementation effort."),(0,o.kt)("h3",{id:"can-i-use-the-threeifcloader-directly"},"Can I use the ",(0,o.kt)("inlineCode",{parentName:"h3"},"THREE.IFCLoader")," directly?"),(0,o.kt)("p",null,"  \ud83d\udc6c\nAs mentioned above, web-ifc-three is the official IFCLoader of Three.js. That is, if you import the IFCLoader from Three.js, the code will be the same as the code you will find in the web-ifc-three repository."),(0,o.kt)("p",null,"  \ud83d\udea7\nYou might be tempted to import the ",(0,o.kt)("inlineCode",{parentName:"p"},"IFCLoader")," from Three.js to avoid importing ",(0,o.kt)("inlineCode",{parentName:"p"},"web-ifc-three")," in your project. This should work, but beware that Three.js is a very large library, and its update rate is much slower than that of IFC.js."),(0,o.kt)(a.M,{icon:"\u23f3",title:"Slight delay",mdxType:"IfcCard"}," Three.js IFCLoader may not have the latest updates and the latest bugs we have fixed will remain unresolved in Three.js until the next version is released."),(0,o.kt)("p",null,"To use the ",(0,o.kt)("inlineCode",{parentName:"p"},"THREE.IFCLoader")," instead of the original ",(0,o.kt)("inlineCode",{parentName:"p"},"IFCLoader")," you only have to change the import statement:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'  // Import web-ifc-three (original) IFCLoader\n  import {\n    IFCLoader\n} from "web-ifc-three/IFCLoader";\n\n  // Import three.js IFCLoader\n  import {\n      IFCLoader\n  } from "three/examples/jsm/loaders/IFCLoader";\n')))}p.isMDXComponent=!0}}]);