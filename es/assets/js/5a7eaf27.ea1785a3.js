(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[785],{1914:function(e,a,r){"use strict";r.r(a),r.d(a,{default:function(){return f},frontMatter:function(){return p},metadata:function(){return u},toc:function(){return m}});var i=r(2122),t=r(9756),o=r(7294),s=r(3905),n=function(e){var a=e.title?o.createElement("div",{className:"card__header"},o.createElement("h3",null,e.title)):"";return o.createElement("div",{className:"card-demo",style:{margin:"2rem"}},o.createElement("div",{className:"card"},a,o.createElement("div",{className:"card__body"},o.createElement("p",null," ",e.children," "))))},l=function(e){return o.createElement("div",{className:"alert alert--primary",role:"alert",style:{margin:"2rem"}},o.createElement("h2",null,"\ud83d\udca1"),o.createElement("div",{style:{marginBottom:"2rem"}}),e.children)},c=function(){return o.createElement("iframe",{width:"100%",height:"300",key:Math.random(),src:"https://ifcjs.github.io/hello-world/introduction/",frameBorder:"0"})},d=["components"],p={sidebar_position:1},u={unversionedId:"Introduction",id:"Introduction",isDocsHomePage:!1,title:"Introduction",description:"\ud83c\udfae",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/Introduction.mdx",sourceDirName:".",slug:"/Introduction",permalink:"/info/es/docs/Introduction",version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Getting started",permalink:"/info/es/docs/Guide"}},m=[{value:"\xbfQu\xe9 es esta biblioteca?",id:"\xbfqu\xe9-es-esta-biblioteca",children:[{value:"\xbfQu\xe9 es la CFI?",id:"\xbfqu\xe9-es-la-cfi",children:[]},{value:"El problema de la CFI",id:"el-problema-de-la-cfi",children:[]},{value:"IFC.js al rescate",id:"ifcjs-al-rescate",children:[]}]},{value:"IFC.js en pocas palabras",id:"ifcjs-en-pocas-palabras",children:[]},{value:"Para qui\xe9n es esta biblioteca",id:"para-qui\xe9n-es-esta-biblioteca",children:[]},{value:"\xbfPor qu\xe9 es diferente IFC.js?",id:"\xbfpor-qu\xe9-es-diferente-ifcjs",children:[{value:"Multiplataforma",id:"multiplataforma",children:[]},{value:"Velocidad",id:"velocidad",children:[]}]},{value:"C\xf3digo de la fuente",id:"c\xf3digo-de-la-fuente",children:[]},{value:"Contribuir",id:"contribuir",children:[]}],b={toc:m};function f(e){var a=e.components,r=(0,t.Z)(e,d);return(0,s.kt)("wrapper",(0,i.Z)({},b,r,{components:a,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"  \ud83c\udfae\nIFC.js es una biblioteca de JavaScript para cargar, mostrar y editar modelos IFC en el navegador. Pruebe la ",(0,s.kt)("a",{parentName:"p",href:"https://agviegas.github.io/web-ifc-viewer/examples/simple-html/"},"demostraci\xf3n en vivo")," con su modelo IFC y descubra la potencia de IFC.js."),(0,s.kt)("h2",{id:"\xbfqu\xe9-es-esta-biblioteca"},"\xbfQu\xe9 es esta biblioteca?"),(0,s.kt)("h3",{id:"\xbfqu\xe9-es-la-cfi"},"\xbfQu\xe9 es la CFI?"),(0,s.kt)("p",null,"  \ud83c\udfe0\nLos arquitectos ya no dibujan los planos de los edificios uno a uno, sino que crean modelos en 3D de los mismos, como las casas modeladas en ",(0,s.kt)("a",{parentName:"p",href:"https://www.ea.com/es-es/games/the-sims"},"Los SIMS"),". Esta forma de trabajar se llama BIM (Building Information Model), porque los modelos creados contienen tanto geometr\xeda como informaci\xf3n."),(0,s.kt)("p",null,"  \ud83d\udd25\nSin embargo, un edificio es tan complejo que no hay ninguna aplicaci\xf3n que pueda crear estos modelos en su totalidad. Cada aplicaci\xf3n tiene una misi\xf3n espec\xedfica: modelar la geometr\xeda, calcular las estructuras, hacer simulaciones energ\xe9ticas, crear documentos de proyecto, etc."),(0,s.kt)("p",null,"  \ud83d\udc40\nEstas herramientas proceden de m\xfaltiples desarrolladores de todo el mundo y cada una trabaja en su propio formato. En otras palabras, el modelo estructural creado por una aplicaci\xf3n de c\xe1lculo estructural no puede ser le\xeddo por el software de simulaci\xf3n energ\xe9tica, y viceversa. Entonces, \xbfc\xf3mo es posible crear un modelo de un edificio a partir de m\xfaltiples herramientas?"),(0,s.kt)("p",null,"  \ud83c\udf89\nLa respuesta es ",(0,s.kt)("a",{parentName:"p",href:"https://www.buildingsmart.org/standards/bsi-standards/industry-foundation-classes/"},(0,s.kt)("strong",{parentName:"a"},"IFC")),", un formato creado por BuildingSMART para contener estos modelos 3D de edificios. Es abierto, por lo que cualquiera puede leerlo y escribirlo. S\xed, es un formato abierto, por lo que cualquiera puede leerlo y escribirlo."),(0,s.kt)(l,{mdxType:"IfcAlert"},"Gracias a IFC, cualquier desarrollador puede crear libremente aplicaciones BIM que se comuniquen con las aplicaciones de las grandes empresas promotoras del sector de la construcci\xf3n."),(0,s.kt)("h3",{id:"el-problema-de-la-cfi"},"El problema de la CFI"),(0,s.kt)("p",null,"Cualquiera que quiera hacer una aplicaci\xf3n BIM necesita leer y escribir archivos IFC para poder importar y exportar informaci\xf3n de otras herramientas. Por desgracia, IFC es un formato dif\xedcil de leer y escribir. Hay miles de p\xe1ginas de documentaci\xf3n y crear y mantener un parser IFC hecho por uno mismo es una tarea enorme."),(0,s.kt)(n,{title:"  \n\xbfPuedes permitirte la CFI?",mdxType:"IfcCard"},"\ud83d\udcb8 Esto es algo que s\xf3lo pueden permitirse empresas con varios desarrolladores trabajando a tiempo completo en esto. Ya no suena tan abierto, \xbfverdad?"),(0,s.kt)("p",null,"Por si tienes curiosidad por saber c\xf3mo es un IFC por dentro, aqu\xed tienes un ejemplo. Imagina analizar cientos de miles de l\xedneas como estas:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"#6699= IFCCARTESIANPOINT((0.,-1.7053025E-13));\n#6701= IFCAXIS2PLACEMENT2D(#6699,#23);\n#6703= IFCCARTESIANPOINT((892.,-253.399999,150.));\n#6705= IFCAXIS2PLACEMENT3D(#6703,#15,#19);\n#6706= IFCEXTRUDEDAREASOLID(#6702,#6705,#19,506.8);\n#6707= IFCCOLOURRGB($,0.50196,0.501913,0.501960);\n")),(0,s.kt)("p",null,"  \ud83d\udc80\nIncluso si est\xe1s dispuesto a crear un analizador sint\xe1ctico desde cero y mantenerlo con cada cambio en el esquema IFC, hay varias cuestiones no triviales para abordar este problema. \xbfC\xf3mo gestionar la memoria en archivos muy grandes? \xbfC\xf3mo implementar la generaci\xf3n geom\xe9trica de forma eficiente? \xbfQu\xe9 hacer cuando un IFC no se ha definido correctamente?"),(0,s.kt)("h3",{id:"ifcjs-al-rescate"},"IFC.js al rescate"),(0,s.kt)("p",null,"No tendr\xeda sentido que todos los desarrolladores tuvieran que implementar su propio lector y escritor de archivos IFC para sus aplicaciones cuando todos hacemos lo mismo: ",(0,s.kt)("strong",{parentName:"p"},"importar y exportar la geometr\xeda y los datos"),"."),(0,s.kt)(n,{mdxType:"IfcCard"},"IFC.js es una biblioteca de JavaScript que hace que sea muy f\xe1cil leer y escribir archivos IFC."),(0,s.kt)("p",null,"Esto permite a los desarrolladores de aplicaciones de arquitectura y construcci\xf3n trabajar en IFC sin esfuerzo y centrarse en las funcionalidades que realmente a\xf1aden valor a su negocio."),(0,s.kt)("h2",{id:"ifcjs-en-pocas-palabras"},"IFC.js en pocas palabras"),(0,s.kt)("p",null,"IFC.js lee los archivos IFC y genera dos cosas:"),(0,s.kt)(n,{title:"\ud83e\uddca\nGeometr\xeda",mdxType:"IfcCard"},"IFC.js es capaz de generar escenas 3D porque es compatible con bibliotecas 3D como Three.js o Babylon.js. Esto significa que puede crear herramientas BIM en 3D de inmediato."),(0,s.kt)(n,{title:"\ud83d\udd17\nDatos",mdxType:"IfcCard"},"Acceso de alto nivel a todas las propiedades asociadas a esa geometr\xeda. Esto significa un f\xe1cil acceso a los datos de los componentes del edificio, sus materiales, caracter\xedsticas t\xe9rmicas, resistencia estructural, etc."),(0,s.kt)("p",null,"Crear una aplicaci\xf3n BIM con IFC.js es tan f\xe1cil como crear una p\xe1gina web con JavaScript, HTML y CSS. Si no tienes ning\xfan archivo IFC disponible, prueba a cargar cualquiera de ",(0,s.kt)("a",{parentName:"p",href:"https://drive.google.com/drive/folders/1MwRsL3ZnlyhWEVUko9wAnklaMne3pp3h?usp=sharing"},"estos"),"."),(0,s.kt)(c,{mdxType:"IfcScene"}),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"import { IfcLoader } from 'web-ifc-three';\nimport { Scene } from 'three';\n\n//Crea la escena THREE.js\nconst scene = new Scene();\n\n//...\n\n//Carga el IFC y lo a\xf1ade a la escena\nconst ifcLoader = new IfcLoader();\nifcLoader.load(ifcURL, (geometry) => scene.add(geometry));\n")),(0,s.kt)("h2",{id:"para-qui\xe9n-es-esta-biblioteca"},"Para qui\xe9n es esta biblioteca"),(0,s.kt)("p",null,"Esta biblioteca est\xe1 dirigida a cualquier persona que quiera desarrollar aplicaciones BIM: tanto a los desarrolladores que crean aplicaciones para el sector de la construcci\xf3n como a los arquitectos y otros profesionales que quieren aprovechar los datos contenidos en sus archivos IFC."),(0,s.kt)("p",null,"Para utilizar esta biblioteca es necesario tener un conocimiento b\xe1sico de JavaScript, HTML y CSS. Estos conocimientos est\xe1n fuera del alcance de esta documentaci\xf3n. Tambi\xe9n necesitar\xe1s utilizar alguna librer\xeda 3D para mostrar la geometr\xeda del IFC (Three.js o Babylon.js). Si no sabes por d\xf3nde empezar, te sugerimos que eches un vistazo ",(0,s.kt)("a",{parentName:"p",href:"https://threejsfundamentals.org/"},"aqu\xed")," o simplemente \xfanete al ",(0,s.kt)("a",{parentName:"p",href:"https://discord.com/invite/g7Uzn2KSwB"},"Canal de Discord")," y saluda."),(0,s.kt)("h2",{id:"\xbfpor-qu\xe9-es-diferente-ifcjs"},"\xbfPor qu\xe9 es diferente IFC.js?"),(0,s.kt)("p",null,"IFC.js es una biblioteca escrita por y para JavaScript, posiblemente uno de los lenguajes m\xe1s ubicuos. Esto significa que es compatible con los navegadores web y las aplicaciones de escritorio y m\xf3viles. Adem\xe1s, JavaScript es uno de los lenguajes m\xe1s f\xe1ciles de aprender y permite construir interfaces de usuario con HTML y CSS. En otras palabras, crear aplicaciones BIM con IFC.js es tan f\xe1cil como crear una p\xe1gina web."),(0,s.kt)("h3",{id:"multiplataforma"},"Multiplataforma"),(0,s.kt)("p",null,"Puede utilizar IFC.js para crear aplicaciones BIM abiertas para cualquier plataforma:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"Web"),": se pueden crear aplicaciones web frontales que lean y escriban archivos IFC y muestren 3D sin depender de la comunicaci\xf3n con el servidor utilizando vanilla JavaScript u otras herramientas como React, Vue, Angular, Svelte, etc. Es decir, con IFC.js podemos convertir cualquier navegador web en una aplicaci\xf3n BIM abierta. Crees que un navegador no es lo suficientemente potente como para procesar un IFC y mostrar el 3d como una aplicaci\xf3n nativa? Puedes comprobarlo t\xfa mismo en el ",(0,s.kt)("a",{parentName:"p",href:"https://threejs.org/examples/webgl_loader_ifc.html"},"ejemplo oficial de Three.js"),", que utiliza IFC.js.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Servidor**: Hay casos en los que el archivo IFC no puede ser procesado en el cliente. Por ejemplo, es posible que un dispositivo m\xf3vil no tenga la potencia necesaria para mostrar varios IFC de tama\xf1o medio o grande. En este caso es posible utilizar IFC.js en el servidor a trav\xe9s de ",(0,s.kt)("a",{parentName:"p",href:"https://nodejs.org/en/"},"Node.js")," y enviar la escena Three.js ya preparada al cliente.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"Escritorio"),": A veces no queremos crear aplicaciones web, sino aplicaciones nativas de escritorio que se ejecuten en Windows o iOS. Esto es posible gracias a tecnolog\xedas como ",(0,s.kt)("a",{parentName:"p",href:"https://www.electronjs.org/"},"Electron"),". Estas aplicaciones nativas se programar\xe1n de la misma manera que las aplicaciones web; HTML, CSS, JavaScript, React, Vue, etc.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"M\xf3viles"),": IFC.js tambi\xe9n es compatible con ",(0,s.kt)("a",{parentName:"p",href:"https://reactnative.dev/"},"React Native"),", que mapea el c\xf3digo WebGL a OpenGL nativo. Esto significa que puedes crear aplicaciones Open BIM compatibles con IFC que se ejecuten en Android e iOS sin ning\xfan esfuerzo adicional."))),(0,s.kt)("h3",{id:"velocidad"},"Velocidad"),(0,s.kt)("p",null,"  \u23f1\ufe0f\nSi tiene experiencia con aplicaciones web, podr\xeda pensar que el punto d\xe9bil de una biblioteca IFC basada en JavaScript es el rendimiento. Sin embargo, el n\xfacleo de la biblioteca est\xe1 desarrollado en C combinado con WebAssembly y ",(0,s.kt)("a",{parentName:"p",href:"https://emscripten.org/"},"Emscripten"),". Est\xe1 dise\xf1ado espec\xedficamente para obtener el m\xe1ximo rendimiento, lo que permite a IFC.js acercarse a la velocidad y el rendimiento de las aplicaciones de escritorio mientras se ejecuta directamente en el navegador."),(0,s.kt)("p",null,"Caracter\xedsticas"),(0,s.kt)("p",null,"Actualmente IFC.js puede:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Leer archivos IFC")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Generar geometr\xeda 3D")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Editar la visualizaci\xf3n de la geometr\xeda")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Cargar varios modelos")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Recuperar las propiedades del IFC")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Escribir archivos IFC"))),(0,s.kt)("p",null,"Actualmente estamos trabajando para poder:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Cargar cualquier tipo de geometr\xeda")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Maneja m\xfaltiples archivos grandes a 60 fps"))),(0,s.kt)("h2",{id:"c\xf3digo-de-la-fuente"},"C\xf3digo de la fuente"),(0,s.kt)("p",null,"IFC.js es una biblioteca grande y multiling\xfce (C , TypeScript JavaScript, etc). Tenerla en un \xfanico repositorio ser\xeda dif\xedcil y poco manejable. Por esa raz\xf3n, la biblioteca existe en m\xfaltiples repositorios, donde cada uno tiene su propio prop\xf3sito:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("a",{parentName:"p",href:"https://github.com/tomvandig/web-ifc"},"web-ifc")," es el repositorio que contiene el n\xfacleo de la librer\xeda: un parser y un generador de geometr\xeda escritos desde cero en C y compilados mediante Emscripten a WebAssembly. Este repositorio encapsula la complejidad de la lectura de los archivos IFC y la carga de sus datos en la memoria.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("a",{parentName:"p",href:"https://github.com/agviegas/web-ifc-three"},"web-ifc-three")," es la librer\xeda que adapta web-ifc a las entidades geom\xe9tricas de Three.js. Esta librer\xeda es el cargador IFC oficial de Three.js.Gracias a este adaptador se pueden crear aplicaciones BIM abiertas con Three.js en s\xf3lo dos l\xedneas de c\xf3digo.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("a",{parentName:"p",href:"https://github.com/anders-lundgren/web-ifc-babylon"},"web-ifc-babylon")," es la adaptaci\xf3n de esta biblioteca para babylon.js.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("a",{parentName:"p",href:"https://github.com/agviegas/web-ifc-viewer"},"web-ifc-viewer")," es un visor IFC basado en el navegador y una librer\xeda boilerplate con muchos ejemplos de lo que se puede hacer con IFC.js y three.js. Todas las aplicaciones BIM tienen funcionalidades comunes: navegaci\xf3n por la escena, cambios de material, selecci\xf3n de elementos haciendo clic sobre ellos, planos de secci\xf3n, etc. Hay un ejemplo de todas estas funcionalidades en este repositorio, por lo que se puede reutilizar en aplicaciones BIM abiertas desde el principio. Puedes probarlo aqu\xed](",(0,s.kt)("a",{parentName:"p",href:"https://agviegas.github.io/web-ifc-viewer/examples/simple-html/"},"https://agviegas.github.io/web-ifc-viewer/examples/simple-html/"),")."))),(0,s.kt)("h2",{id:"contribuir"},"Contribuir"),(0,s.kt)("p",null,"\xbfQuieres ayudarnos a seguir mejorando el mundo del desarrollo de Open BIM con IFC.js? La biblioteca es grande, as\xed que tendr\xe1s que elegir d\xf3nde quieres participar."),(0,s.kt)(n,{title:"Parsing, geometr\xeda y C",mdxType:"IfcCard"},"Si te apasiona el C , WebAssembly, el parsing o la implementaci\xf3n de bajo nivel del est\xe1ndar IFC, puedes ayudarnos conweb-ifc. Esta es la biblioteca m\xe1s grande y compleja de todas."),(0,s.kt)(n,{title:"Tres.js, geometr\xeda y Typescript",mdxType:"IfcCard"},"Por otro lado, si eres un desarrollador de Three.js y te gustar\xeda contribuir a la biblioteca, puedes ayudarnos con web-ifc-three, que es el cargador IFC oficial de Three.js (optimizaci\xf3n de la geometr\xeda, construcci\xf3n de la API del cargador IFC, etc)."),(0,s.kt)(n,{title:"Herramientas BIM, brainstorming y UX",mdxType:"IfcCard"},"Por \xfaltimo, si s\xf3lo te interesa construir aplicaciones BIM abiertas y tienes grandes ideas para herramientas BIM o interfaces de usuario, lo mejor es que nos ayudes a hacer de web-ifc-viewer el mejor visor IFC del mercado."),(0,s.kt)("p",null,"En cualquier caso, te animamos a que te pases por el ",(0,s.kt)("a",{parentName:"p",href:"https://discord.com/invite/g7Uzn2KSwB"},"canal de Discord"),", nos saludes y nos cuentes lo que te preocupa para que podamos orientarte."))}f.isMDXComponent=!0}}]);